# Generated by Django 3.2.13 on 2022-06-09 00:59

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('experience', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('socialnetworks', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created', verbose_name='created_at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on which the object was modified', verbose_name='modified_at')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists'}, max_length=254, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: +999999999 up to 15 digits allowed', regex='\\+?1?\\d{9,15}$')])),
                ('country', models.CharField(choices=[('AF', 'Afganistán'), ('AL', 'Albania'), ('DZ', 'Argelia'), ('AS', 'Samoa Americana'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antártida'), ('AG', 'Antigua y Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaiyán'), ('BS', 'Bahamas'), ('BH', 'Baréin'), ('BD', 'Banglades'), ('BB', 'Barbados'), ('BY', 'Bielorrusia'), ('BE', 'Bélgica'), ('BZ', 'Belice'), ('BJ', 'Benin'), ('BM', 'Bermudas'), ('BT', 'Butan'), ('BO', 'Bolivia'), ('BA', 'Bosnia-Herzegovina'), ('BW', 'Botsuana'), ('BR', 'Brasil'), ('IO', 'Territorio Británico del Océano Índico'), ('BN', 'Brunei'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Camboya'), ('CM', 'Camerún'), ('CA', 'Canadá'), ('CV', 'Cabo Verde'), ('KY', 'Islas Caimán'), ('CF', 'República Centroafricana'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Isla de Navidad'), ('CC', 'Islas Cocos'), ('CO', 'Colombia'), ('KM', 'Comoras'), ('CG', 'Congo'), ('CD', 'República Democrática del Congo'), ('CK', 'Islas Cook'), ('CR', 'Costa Rica'), ('CI', 'Costa de Marfil'), ('HR', 'Croacia'), ('CU', 'Cuba'), ('CY', 'Chipre'), ('CZ', 'Chequia'), ('DK', 'Dinamarca'), ('DJ', 'Yibuti'), ('DM', 'Dominica'), ('DO', 'República Dominicana'), ('EC', 'Ecuador'), ('EG', 'Egipto'), ('SV', 'El Salvador'), ('GQ', 'Guinea Ecuatorial'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Etiopía'), ('FK', 'Islas Malvinas'), ('FO', 'Islas Feroe'), ('FJ', 'Fiyi'), ('FI', 'Finlandia'), ('FR', 'Francia'), ('GF', 'Guayana Francesa'), ('PF', 'Polinesia Francesa'), ('GA', 'Gabón'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Alemania'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Grecia'), ('GL', 'Groenlandia'), ('GD', 'Granada'), ('GP', 'Guadalupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bisau'), ('GY', 'Guyana'), ('HT', 'Haití'), ('VA', 'Ciudad del Vaticano'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungría'), ('IS', 'Islandia'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Irán'), ('IQ', 'Iraq'), ('IE', 'Irlanda'), ('IM', 'Isla de Man'), ('IL', 'Israel'), ('IT', 'Italia'), ('JM', 'Jamaica'), ('JP', 'Japón'), ('JE', 'Jersey'), ('JO', 'Jordania'), ('KZ', 'Kazajistán'), ('KE', 'Kenia'), ('KI', 'Kiribati'), ('KP', 'Corea del Norte'), ('KR', 'Corea del Sur'), ('XK', 'Kosovo'), ('KW', 'Kuwait'), ('KG', 'Kirguistán'), ('LA', 'Laos'), ('LV', 'Letonia'), ('LB', 'Líbano'), ('LS', 'Lesoto'), ('LR', 'Liberia'), ('LY', 'Libia'), ('LI', 'Liechtenstein'), ('LT', 'Lituania'), ('LU', 'Luxemburgo'), ('MO', 'Macao'), ('MK', 'República de Macedonia'), ('MG', 'Madagascar'), ('MW', 'Malaui'), ('MY', 'Malasia'), ('MV', 'Maldivas'), ('ML', 'Malí'), ('MT', 'Malta'), ('MH', 'Islas Marshall'), ('MQ', 'Martinica'), ('MR', 'Mauritania'), ('MU', 'Mauricio'), ('YT', 'Mayotte'), ('MX', 'México'), ('FM', 'Estados Federados de Micronesia'), ('MD', 'Moldavia'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Marruecos'), ('MZ', 'Mozambique'), ('MM', 'Birmania'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Holanda'), ('AN', 'Antillas Holandesas'), ('NC', 'Nueva Caledonia'), ('NZ', 'Nueva Zelanda'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'IslaNorfolk'), ('MP', 'IslasMarianasdelNorte'), ('NO', 'Noruega'), ('OM', 'Omán'), ('PK', 'Pakistán'), ('PW', 'Palaos'), ('PA', 'Panamá'), ('PG', 'Papúa Nueva Guinea'), ('PY', 'Paraguay'), ('PE', 'Perú'), ('PH', 'Filipinas'), ('PN', 'Islas Pitcairn'), ('PL', 'Polonia'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RO', 'Rumania'), ('RU', 'Rusia'), ('RW', 'Ruanda'), ('RE', 'Reunion'), ('BL', 'San Bartolome'), ('SH', 'Santa Elena, Ascensión y Tristán de Acuña'), ('KN', 'San Cristóbal y Nieves'), ('LC', 'Santa Lucía'), ('MF', 'Isla de San Martín'), ('PM', 'San Pedro y Miquelon'), ('VC', 'San Vicente y las Granadinas'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', ' Santo Tomé y Príncipe'), ('SA', 'Arabia Saudita'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leona'), ('SG', 'Singapur'), ('SK', 'Eslovaquia'), ('SI', 'Eslovenia'), ('SB', 'Islas Salomón'), ('SO', 'Somalia'), ('ZA', 'Sudáfrica'), ('SS', 'Sudán del Sur'), ('ES', 'España'), ('LK', 'Sri Lanka'), ('PS', 'Estado de Palestina'), ('SD', 'Sudán'), ('SR', 'Surinam'), ('SJ', 'Svalbard y Jan Mayen'), ('SZ', 'Suazilandia'), ('SE', 'Suecia'), ('CH', 'Suiza'), ('SY', 'Siria'), ('TW', 'Taiwán'), ('TJ', 'Tayikistán'), ('TZ', 'Tanzania'), ('TH', 'Tailandia'), ('TL', 'Timor Oriental'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad y Tobago'), ('TN', 'Túnez'), ('TR', 'Turquía'), ('TM', 'Turkmenistán'), ('TC', 'Islas Turcas y Caicos'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ucrania'), ('AE', 'Emiratos Árabes Unidos'), ('GB', 'Reino Unido'), ('US', 'Estados Unidos'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistán'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Vietnam'), ('VG', 'Islas Vírgenes Británicas'), ('VI', 'Islas Vírgenes de los Estados Unidos'), ('WF', 'Wallis y Futuna'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabue'), ('AX', 'Åland')], default='VE', help_text='Seleccionar país', max_length=2)),
                ('is_verified', models.BooleanField(default=False, verbose_name='verify users')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created', verbose_name='created_at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on which the object was modified', verbose_name='modified_at')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='users/pictures/', verbose_name='profile picture')),
                ('resume', models.FileField(blank=True, null=True, upload_to='users/resume/', verbose_name='Resume users')),
                ('biography', models.TextField(blank=True, help_text='Descripción del usuario', max_length=500)),
                ('level_academy', models.TextField(blank=True, help_text='Nivel académico que posee el usuario', max_length=400)),
                ('qualities', models.TextField(blank=True, help_text='Cualidades del usuario', max_length=400)),
                ('experience', models.DurationField(blank=True, null=True)),
                ('courses', models.ManyToManyField(related_name='courses', to='experience.Courses')),
                ('items', models.ManyToManyField(related_name='items', to='experience.Items')),
                ('social_networks', models.ManyToManyField(related_name='social_networks', to='socialnetworks.SocialNetworks')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('works', models.ManyToManyField(related_name='works', to='experience.Works')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
    ]
